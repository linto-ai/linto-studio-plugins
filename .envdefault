# This file contains the default values for the environment variables
# You can override them by creating a file named .env in the same directory
# you can also override them by setting them in the environment before running the app (e.g. export SRT_PORT=1234)
NODE_ENV=production # used to load the appropriate migration config
TZ=UTC
LOG_FORMAT=text # Format of the log: text or json
LOG_LEVEL=debug # Level among error, warn, info, debug

# App components registration (don't touch)
TRANSCRIBER_COMPONENTS=BrokerClient,StreamingServer,Healthcheck # Comma separated list of components to run, they load in this order
SCHEDULER_COMPONENTS=BrokerClient # Comma separated list of components to run, they load in this order
SESSION_API_COMPONENTS=WebServer,BrokerClient
DELIVERY_COMPONENTS=BrokerClient,WebServer,IoHandler

# Audio streaming configuration
MAX_AUDIO_BUFFER=10 # If ASR is down, keeps MAX_AUDIO_BUFFER seconds of audio to fast forward upon reconnection
MIN_AUDIO_BUFFER=200 # Send audio to ASR when buffer is at least MIN_AUDIO_BUFFER milliseconds long
BYTES_PER_SAMPLE=2 # 1 for 8-bit, 2 for 16-bit, 4 for 32-bit
SAMPLE_RATE=16000 # 8000, 16000, 32000, 44100, 48000
AUDIO_STORAGE_PATH=/tmp # Path to store channel audio files, use trailing slash !

##### Inbound / Pulled streaming #####
STREAMING_PASSPHRASE=A0123456789 # empty, false or a passphrase (at least 10 chars).
STREAMING_HOST=0.0.0.0 # Listening address for transcriber. 0.0.0.0 for all interfaces (listener), you might use a specific IP address for SRT rendez-vous/caller mode
STREAMING_PROTOCOLS=SRT,RTMP,WS # comma separated list : SRT, RTMP, WS
STREAMING_SRT_MODE=listener # listerner, caller, rendezvous
STREAMING_SRT_UDP_PORT=8889 # UDP port for SRT listener
STREAMING_RTMP_TCP_PORT=1935 # TCP port for RTMP listener
STREAMING_WS_TCP_PORT=8080 # TCP port for Websocket listener
# As app constructs streaming endpoint URLs, it needs to know the proxy host and port to build the correct URL
STREAMING_PROXY_SRT_HOST=localhost # Transcriber host for SRT inbound streaming (false to disable)
STREAMING_PROXY_RTMP_HOST=localhost # Transcriber host for RTMP inbound streaming (false to disable)
STREAMING_PROXY_WS_HOST=localhost # Transcriber host for WS inbound streaming (false to disable)
STREAMING_PROXY_SRT_UDP_PORT=8889 # UDP port for SRT listener
STREAMING_PROXY_RTMP_TCP_PORT=1935 # TCP port for RTMP listener
STREAMING_PROXY_WS_TCP_PORT=8080 # TCP port for Websocket listener
STREAMING_HEALTHCHECK_TCP=9999 # TCP port for healthcheck listener
STREAMING_WS_SECURE=true
STREAMING_WS_ENDPOINT=transcriber-ws
STREAMING_RTMP_SECURE=false

##### Database #####
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=secret
DB_NAME=postgres

##### ASR #####
TRANSCRIBER_BOT_NAME=bot
TRANSCRIBER_RESET_MESSAGE="Channel reset."
ASR_AVAILABLE_TRANSLATIONS_MICROSOFT="ar,eu,bs,bg,zh,zhh,cs,da,nl,en,et,fi,fr,gl,de,el,hi,hu,id,it,ja,ko,lv,lt,mk,nb,pl,pt,ro,ru,sr,sk,sl,es,sv,th,tr,uk,vi,cy"
ASR_HAS_DIARIZATION_MICROSOFT=true

##### MQTT compatible Broker #####
BROKER_HOST=localhost
BROKER_PORT=1883
BROKER_USERNAME=
BROKER_PASSWORD=
BROKER_KEEPALIVE=60
BROKER_PROTOCOL=mqtt

##### Session API #####
SESSION_API_HOST=http://localhost:8000 # Host used by the Swagger doc to request the Session API
SESSION_API_WEBSERVER_HTTP_PORT=8000
