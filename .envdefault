# This file contains the default values for the environment variables
# You can override them by creating a file named .env in the same directory
# you can also override them by setting them in the environment before running the app (e.g. export SRT_PORT=1234)

NODE_ENV=production # used to load the appropriate migration config

TRANSCRIBER_COMPONENTS=BrokerClient,StreamingServer,ASR # Comma separated list of components to run, they load in this order
SCHEDULER_COMPONENTS=BrokerClient,WebServer # Comma separated list of components to run, they load in this order
SESSION_API_COMPONENTS=BrokerClient,WebServer,IoHandler
DELIVERY_COMPONENTS=BrokerClient,WebServer,IoHandler
SESSION_API_HOST=http://localhost:8000
SESSION_API_WEBSERVER_HTTP_PORT=8000
SESSION_API_PUBLIC_URL=http://localhost:8000
SESSION_SCHEDULER_URL=http://localhost:8002
SCHEDULER_WEBSERVER_HTTP_PORT=8002
DELIVERY_WEBSERVER_HTTP_PORT=8001
MAX_AUDIO_BUFFER=10 # If ASR is down, keeps MAX_AUDIO_BUFFER seconds of audio to fast forward upon reconnection
MIN_AUDIO_BUFFER=200 # Send audio to ASR when buffer is at least MIN_AUDIO_BUFFER milliseconds long
BYTES_PER_SAMPLE=2 # 1 for 8-bit, 2 for 16-bit, 4 for 32-bit
SAMPLE_RATE=16000 # 8000, 16000, 32000, 44100, 48000
##### Inbound / Pulled streaming #####
# transcriber might listen to an UDP port directly (like using network mode host in docker)
# if transcriber is behind a proxy, use those configs to correctly reach the transcriber container. Also make sure to set UDP_RANGE to a fixed port like 8889-8889 so that the transcriber container is reachable.
# i.e : using network_mode as host, keep this default values and every transcriber spawned will listen to a random port within the range on the host machine
# i.e : deploying transcriber behind a proxy, you'll want to fix the UDP port of transcriber to some value (e.g. 8889), set the proxy address as STREAMING_PROXY_HOST (e.g. mystreamingdomain.com) and port accordingly to your needs.
STREAMING_PROXY_HOST=false # Transcriber host for inbound streaming (false to disable)
STREAMING_PROXY_PORT=false # Proxy port for inbound streaming (false to disable)
STREAMING_PROTOCOL=SRT # SRT, RTMP, WEBRTC
STREAMING_HOST=0.0.0.0 # Listening address for transcriber. 0.0.0.0 for all interfaces (listener), you might use a specific IP address for SRT rendez-vous/caller mode
UDP_RANGE=8889-8999
STREAMING_PASSPHRASE=true # true, false or a passphrase (at least 10 chars). If true a random passphrase will be generated and published to the broker when registering
#SRT
SRT_MODE=listener # listerner, caller, rendezvous
#RTMP
#WEBRTC

##### Database #####
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=mysecretpassword
DB_NAME=postgres

##### ASR #####
ASR_PROVIDER=linto # google, microsoft, watson, aws
ASR_LANGUAGE=fr-FR # en-US, es-ES, fr-FR, de-DE, pt-BR, ja-JP, ko-KR, zh-CN...
ASR_ENDPOINT= # Only for custom ASR providers
ASR_USERNAME= 
ASR_REGION=westeurope
ASR_PASSWORD= 
ASR_API_KEY=

##### Broker #####
BROKER_HOST=localhost
BROKER_PORT=1883
BROKER_USERNAME=
BROKER_PASSWORD=
BROKER_KEEPALIVE=60
BROKER_PROTOCOL=mqtt

##### Delivery #####
DELIVERY_PUBLIC_URL=http://localhost:8001
DELIVERY_WS_PUBLIC_URL=ws://localhost:8001
DELIVERY_SESSION_URL=http://localhost:8000
DELIVERY_ALLOWED_DOMAINS=localhost:1234


##### Front end #####
FRONT_END_PUBLIC_URL=http://localhost:1234
FRONT_END_PORT=8000
TRANSCRIBER_BOT_NAME=bot
