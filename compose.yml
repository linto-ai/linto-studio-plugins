services:
  #---------- optional services
  # Convenient rapid mosquitto and posgres startup configuration
  # You will need to configure it depending on your need for custom deployments
  broker:
    image: eclipse-mosquitto:latest
    expose:
      - "${BROKER_PORT}"
    command: mosquitto -c /mosquitto-no-auth.conf
    networks:
      - internal

  database:
    image: postgres:latest
    expose:
      - "${DB_PORT}"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    command: -p ${DB_PORT}
    networks:
      - internal
  #----------

  migration:
    build:
      context: .
      dockerfile: migration/Dockerfile
    env_file:
      - .envdefault.docker
    environment:
      - NODE_ENV=production
    depends_on:
      - database
    networks:
      - internal

  transcriber:
    build:
      context: .
      dockerfile: Transcriber/Dockerfile
    env_file:
      - .envdefault.docker
    environment:
      - DEBUG=transcriber:*
    depends_on:
      - broker
    ports:
      - "${STREAMING_PROXY_SRT_UDP_PORT}:${STREAMING_SRT_UDP_PORT}/udp"
      - "${STREAMING_PROXY_RTMP_TCP_PORT}:${STREAMING_RTMP_TCP_PORT}"
      - "${STREAMING_PROXY_WS_TCP_PORT}:${STREAMING_WS_TCP_PORT}"
    networks:
      - internal

  sessionapi:
    build:
      context: .
      dockerfile: Session-API/Dockerfile
    env_file:
      - .envdefault.docker
    environment:
      - DEBUG=session-api:*
    expose:
      - "${SESSION_API_WEBSERVER_HTTP_PORT}"
    ports:
      - "${SESSION_API_WEBSERVER_HTTP_PORT}:${SESSION_API_WEBSERVER_HTTP_PORT}"
    depends_on:
      broker:
        condition: service_started
      migration:
        condition: service_completed_successfully
    networks:
      - internal

  scheduler:
    build:
      context: .
      dockerfile: Scheduler/Dockerfile
    env_file:
      - .envdefault.docker
    environment:
      - DEBUG=scheduler:*
    depends_on:
      broker:
        condition: service_started
      migration:
        condition: service_completed_successfully
    networks:
      - internal

networks:
  internal:
